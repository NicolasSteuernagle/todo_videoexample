{"version":3,"sources":["Components/TodoTask.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TodoTask","task","completeTask","className","taskName","deadline","priority","notes","onClick","App","useState","setTask","setDealine","setPriority","setNotes","todoList","setTodoList","handleChange","event","target","name","value","Number","taskNameToDelete","filter","type","placeholder","onChange","newTask","map","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNA6BeA,EArBE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,aACxB,OACE,sBAAKC,UAAU,OAAf,UACE,sBAAKA,UAAU,UAAf,UACE,+BAAOF,EAAKG,WACZ,oDAAuBH,EAAKI,YAC5B,oDAAuBJ,EAAKK,YAC5B,2CAAcL,EAAKM,YAErB,wBACEC,QAAS,WACPN,EAAaD,EAAKG,WAFtB,4BCuESK,EAhFC,WACd,MAAwBC,mBAAiB,IAAzC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA+BD,mBAAiB,GAAhD,mBAAOL,EAAP,KAAiBO,EAAjB,KACA,EAAgCF,mBAAiB,IAAjD,mBAAOJ,EAAP,KAAiBO,EAAjB,KACA,EAA0BH,mBAAiB,IAA3C,mBAAOH,EAAP,KAAcO,EAAd,KACA,EAAgCJ,mBAAkB,IAAlD,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAACC,GACM,SAAtBA,EAAMC,OAAOC,KACfT,EAAQO,EAAMC,OAAOE,OACS,aAAtBH,EAAMC,OAAOC,KACrBR,EAAWU,OAAOJ,EAAMC,OAAOE,QACD,aAAtBH,EAAMC,OAAOC,KACnBP,EAAYK,EAAMC,OAAOE,OAEzBP,EAASI,EAAMC,OAAOE,QAatBnB,EAAe,SAACqB,GACpBP,EACED,EAASS,QAAO,SAACvB,GACf,OAAOA,EAAKG,WAAamB,OAK/B,OACE,sBAAKpB,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,uBACEsB,KAAK,OACLC,YAAY,UACZN,KAAK,OACLC,MAAOpB,EACP0B,SAAUV,IAEZ,uBACEQ,KAAK,SACLC,YAAY,wBACZN,KAAK,WACLC,MAAOhB,EACPsB,SAAUV,IAEZ,uBACEQ,KAAO,OACPC,YAAY,oBACZN,KAAO,WACPC,MAASf,EACTqB,SAAUV,IAEV,uBACEQ,KAAO,OACPC,YAAY,WACZN,KAAO,QACPC,MAASd,EACToB,SAAUV,OAGhB,wBAAQT,QAlDE,WACd,IAAMoB,EAAU,CAAExB,SAAUH,EAAMI,SAAUA,EAAUC,SAAUA,EAAUC,MAAOA,GACjFS,EAAY,GAAD,mBAAKD,GAAL,CAAea,KAC1BjB,EAAQ,IACRC,EAAW,GACXC,EAAY,IACZC,EAAS,KA4CL,yBAEF,qBAAKX,UAAU,WAAf,SACGY,EAASc,KAAI,SAAC5B,EAAa6B,GAC1B,OAAO,cAAC,EAAD,CAAoB7B,KAAMA,EAAMC,aAAcA,GAA/B4B,YCnEjBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d9cb48ff.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ITask } from \"../Interfaces\";\r\n\r\ninterface Props {\r\n  task: ITask;\r\n  completeTask(taskNameToDelete: string): void;\r\n}\r\n\r\nconst TodoTask = ({ task, completeTask }: Props) => {\r\n  return (\r\n    <div className=\"task\">\r\n      <div className=\"content\">\r\n        <span>{task.taskName}</span>\r\n        <span>Days Until Due: {task.deadline}</span>\r\n        <span>Priority Level: {task.priority}</span>\r\n        <span>Notes: {task.notes}</span>\r\n      </div>\r\n      <button\r\n        onClick={() => {\r\n          completeTask(task.taskName);\r\n        }}\r\n      >\r\n          Clear Task\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default TodoTask;","/**\n * Follow Tutorial From https://www.youtube.com/watch?v=bjnW2NLAofI\n */\nimport React, { FC, ChangeEvent, useState } from \"react\";\nimport \"./App.css\";\nimport TodoTask from \"./Components/TodoTask\";\nimport { ITask } from \"./Interfaces\";\n\nconst App: FC = () => {\n  const [task, setTask] = useState<string>(\"\");\n  const [deadline, setDealine] = useState<number>(0);\n  const [priority, setPriority] = useState<string>(\"\");\n  const [notes, setNotes] = useState<string>(\"\");\n  const [todoList, setTodoList] = useState<ITask[]>([]);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    if (event.target.name === \"task\") {\n      setTask(event.target.value);\n    } else if(event.target.name === \"deadline\")\n      setDealine(Number(event.target.value));\n      else if(event.target.name === \"priority\")\n        setPriority(event.target.value);\n      else{\n        setNotes(event.target.value);\n      }\n  };\n\n  const addTask = (): void => {\n    const newTask = { taskName: task, deadline: deadline, priority: priority, notes: notes };\n    setTodoList([...todoList, newTask]);\n    setTask(\"\");\n    setDealine(0);\n    setPriority(\"\");\n    setNotes(\"\");\n  };\n\n  const completeTask = (taskNameToDelete: string): void => {\n    setTodoList(\n      todoList.filter((task) => {\n        return task.taskName !== taskNameToDelete;\n      })\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <div className=\"inputContainer\">\n          <input\n            type=\"text\"\n            placeholder=\"Task...\"\n            name=\"task\"\n            value={task}\n            onChange={handleChange}\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Deadline (in Days)...\"\n            name=\"deadline\"\n            value={deadline}\n            onChange={handleChange}\n          />\n          <input\n            type = \"text\"\n            placeholder=\"Priority level...\"\n            name = \"priority\"\n            value = {priority}\n            onChange={handleChange}\n            />\n            <input\n              type = \"text\"\n              placeholder=\"Notes...\"\n              name = \"notes\"\n              value = {notes}\n              onChange={handleChange}\n            />\n        </div>\n        <button onClick={addTask}>Add Task</button>\n      </div>\n      <div className=\"todoList\">\n        {todoList.map((task: ITask, key: number) => {\n          return <TodoTask key={key} task={task} completeTask={completeTask} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}